<?php

namespace Drupal\brightcove_dynamic_ingest\Form;

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\brightcove_dynamic_ingest\Controller\BcDynamicIngestController;
use Drupal\mc_library\Services\UtilityService;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * Brightcove Dynamic Ingest Form.
 */
class BcDynamicIngestForm extends FormBase {

  /**
   * Drupal\mc_library\Services\UtilityService definition.
   *
   * @var \Drupal\mc_library\Services\UtilityService
   */
  protected $utilityService;

  /**
   * {@inheritdoc}
   */
  public function __construct(UtilityService $utility_service) {
    $this->utilityService = $utility_service;
  }

  /**
   * {@inheritdoc}
   */
  public static function create(ContainerInterface $container) {
    return new static(
      $container->get('mc_library.utility_service')
    );
  }

  /**
   * {@inheritdoc}
   */
  public function getFormId() {
    return 'bc_dynamic_ingest_form';
  }

  /**
   * {@inheritdoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state) {
    // Attaching library with variables/array.
    $controller = new BcDynamicIngestController();
    $form['#attached']['library'][] = 'brightcove_dynamic_ingest/upload-files';
    $form['#attached']['drupalSettings']['brightcoveDynamicIngest'] = [
      'watermark' => [
        'accountId' => $controller->getBrightcoveClientKeys(TRUE)['accountId'],
        'tags' => $controller->getPushTags(TRUE),
      ],
      'noWatermark' => [
        'accountId' => $controller->getBrightcoveClientKeys()['accountId'],
        'tags' => $controller->getPushTags(),
      ],
    ];

    $form['title'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Title'),
      '#required' => TRUE,
    ];
    $form['description'] = [
      '#type' => 'textarea',
      '#title' => $this->t('Description'),
    ];
    $form['video'] = [
      '#type' => 'file',
      '#title' => $this->t('Video'),
      '#attributes' => ['accept' => 'video/*'],
      '#required' => TRUE,
    ];
    $form['thumbnail'] = [
      '#type' => 'managed_file',
      '#title' => $this->t('Video Thumbnail'),
      '#description' => $this->t('Override the default image generated by Brightcove'),
      '#accept' => 'image/*',
      '#upload_validators' => ['file_validate_extensions' => ['png gif jpg jpeg']],
      '#upload_location' => 'cloudinary://mediacorp/one-cms/images/',
    ];
    $form['watermark'] = [
      '#type' => 'checkbox',
      '#title' => $this->t('Attach Watermark'),
      '#disabled' => TRUE,
    ];
    if ($this->utilityService->checkBrand('cna')) {
      $form['watermark']['#disabled'] = FALSE;
    }
    $form['submit'] = [
      '#type' => 'submit',
      '#value' => $this->t('Upload'),
    ];

    return $form;
  }

  /**
   * {@inheritdoc}
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {

  }

}
