<?php

namespace Drupal\brightcove_dynamic_ingest\Form;

use Drupal\brightcove_dynamic_ingest\Services\BcDynamicIngestService;
use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * Brightcove Dynamic Ingest Form.
 */
class BcDynamicIngestForm extends FormBase {

  /**
   * Drupal\brightcove_dynamic_ingest\Services\BcDynamicIngestService definition.
   *
   * @var \Drupal\brightcove_dynamic_ingest\Services\BcDynamicIngestService
   */
  protected $bcDynamicIngestService;

  /**
   * {@inheritdoc}
   */
  public function __construct(BcDynamicIngestService $bc_dynamic_ingest_service) {
    $this->bcDynamicIngestService = $bc_dynamic_ingest_service;
  }

  /**
   * {@inheritdoc}
   */
  public static function create(ContainerInterface $container) {
    return new static(
      $container->get('brightcove_dynamic_ingest.service')
    );
  }

  /**
   * {@inheritdoc}
   */
  public function getFormId() {
    return 'bc_dynamic_ingest_form';
  }

  /**
   * {@inheritdoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state) {
    // Attaching library with variables/array.
//    $form['#attached']['library'][] = 'brightcove_dynamic_ingest/with-local-aws-js';
    $form['#attached']['library'][] = 'brightcove_dynamic_ingest/upload-files';
    $form['#attached']['drupalSettings']['brightcoveDynamicIngest'] = $this->bcDynamicIngestService->getOnlyClientField(['accountId', 'tags']);

    $form['api_client'] = [
      '#type' => 'select',
      '#title' => $this->t('API Client'),
      '#options' => $this->bcDynamicIngestService->getOnlyClientField(['label']),
      '#required' => TRUE,
    ];
    $form['title'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Title'),
      '#required' => TRUE,
    ];
    $form['description'] = [
      '#type' => 'textarea',
      '#title' => $this->t('Description'),
    ];
    $form['video'] = [
      '#type' => 'file',
      '#title' => $this->t('Video'),
      '#attributes' => ['accept' => 'video/*'],
      '#required' => TRUE,
    ];
    $form['thumbnail'] = [
      '#type' => 'managed_file',
      '#title' => $this->t('Video Thumbnail'),
      '#description' => $this->t('Override the default image generated by Brightcove'),
      '#accept' => 'image/*',
      '#upload_validators' => ['file_validate_extensions' => ['png gif jpg jpeg']],
      '#upload_location' => 'public://bc-dynamic-ingest/',
    ];
    $form['action']['#type'] = 'actions';
    $form['action']['submit'] = [
      '#type' => 'submit',
      '#value' => $this->t('Submit'),
    ];

    return $form;
  }

  /**
   * {@inheritdoc}
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {

  }

}
